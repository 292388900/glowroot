<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent>

  <groupId>io.informant</groupId>
  <artifactId>informant-parent</artifactId>
  <version>0.5-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Informant Parent Project</name>
  <description>Informant Parent Project</description>
  <url>http://informant.github.com</url>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <prerequisites>
    <maven>3.0</maven>
  </prerequisites>

  <modules>
    <module>plugin-api</module>
    <module>shaded-slf4j-impl</module>
    <module>core</module>
    <module>plugin-testkit</module>
    <module>packager-maven-plugin</module>
    <module>integration-tests</module>
    <module>ui-testing</module>
    <module>servlet-plugin</module>
    <module>jdbc-plugin</module>
    <module>package</module>
  </modules>

  <scm>
    <connection>scm:git:https://github.com/informant/informant.git</connection>
    <developerConnection>scm:git:git@github.com:informant/informant.git</developerConnection>
    <url>https://github.com/informant/informant</url>
  </scm>

  <properties>
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    <sonar.jacoco.reportPath>${basedir}/../target/jacoco-combined.exec</sonar.jacoco.reportPath>
  </properties>

  <build>
    <!-- this property is just for supporting sonar analysis of javascript files -->
    <sourceDirectory>${source.directory}</sourceDirectory>
    <plugins>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.1.1</version>
        <executions>
          <execution>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.0</version>
                </requireMavenVersion>
                <requirePluginVersions>
                  <!-- banSnapshots is overridden and set to true in release profile -->
                  <banSnapshots>false</banSnapshots>
                </requirePluginVersions>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.2</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!--
          ensure that only methods available in jdk 5 can
          be used even when compiling with a more recent jdk
        -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
        <version>1.9</version>
        <configuration>
          <signature>
            <groupId>org.codehaus.mojo.signature</groupId>
            <artifactId>java15</artifactId>
            <version>1.0</version>
          </signature>
        </configuration>
        <executions>
          <execution>
            <phase>process-classes</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.5.1</version>
          <configuration>
            <source>1.5</source>
            <target>1.5</target>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.5</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.7</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.3.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.5</version>
        </plugin>
        <plugin>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>3.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.12.1</version>
        </plugin>
        <plugin>
          <!-- this is just to suppress annoying warnings in eclipse workspace -->
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <versionRange>[1.0,)</versionRange>
                    <goals>
                      <goal>enforce</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-enforcer-plugin</artifactId>
            <configuration>
              <rules>
                <requirePluginVersions>
                  <!-- overrides more lenient banShapshots=false allowed prior to release -->
                  <banSnapshots>true</banSnapshots>
                </requirePluginVersions>
                <requireJavaVersion>
                  <version>[1.5,1.6)</version>
                </requireJavaVersion>
                <requireNoRepositories />
                <requireReleaseDeps />
                <requireReleaseVersion />
                <requireUpperBoundDeps />
              </rules>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>checker</id>
      <build>
        <plugins>
          <plugin>
            <!-- running checker framework check requires jdk7 -->
            <groupId>edu.washington.cs.types.checker</groupId>
            <artifactId>checker-maven-plugin</artifactId>
            <version>1.6.0</version>
            <executions>
              <execution>
                <phase>process-classes</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <processors>
                <processor>checkers.nullness.NullnessChecker</processor>
                <processor>checkers.igj.IGJChecker</processor>
              </processors>
              <failOnError>false</failOnError>
              <!-- implicit imports for commented out uses of /*@Nullable*/, etc -->
              <javaParams>-Djsr308_imports=checkers.nullness.quals.*</javaParams>
              <javacParams>-Astubs=${basedir}/../core/src/main/stubs -Alint=nulltest</javacParams>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- this profile should be activated using -Djacoco since the presence of that property will
        disable class shading and proguard-ing in core/pom.xml, otherwise the bytecode changes done
        to the classes during shading and proguard-ing will modify the jacoco class id and the sonar
        reports won't report usage of those bytecode modified classes.
        also, -Djacoco=true will disable JarFileShadingTest in integration-tests since that will
        fail when class shading is disabled -->
      <id>active-this-profile-using-the-jacoco-property</id>
      <activation>
        <property>
          <name>jacoco</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.6.2.201302030002</version>
            <configuration>
              <destFile>${basedir}/../target/jacoco-combined.exec</destFile>
            </configuration>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>not-sonar-javascript</id>
      <activation>
        <property>
          <name>sonar.language</name>
          <value>!js</value>
        </property>
      </activation>
      <properties>
        <source.directory>src/main/java</source.directory>
      </properties>
    </profile>
    <profile>
      <id>sonar-javascript</id>
      <activation>
        <property>
          <name>sonar.language</name>
          <value>js</value>
        </property>
      </activation>
      <properties>
        <source.directory>src/main/resources</source.directory>
        <sonar.branch>Javascript</sonar.branch>
        <sonar.exclusions>io/informant/local/ui/libs/**</sonar.exclusions>
      </properties>
    </profile>
  </profiles>
</project>
