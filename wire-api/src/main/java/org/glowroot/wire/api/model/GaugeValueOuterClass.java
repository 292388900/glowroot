// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GaugeValue.proto

package org.glowroot.wire.api.model;

public final class GaugeValueOuterClass {
  private GaugeValueOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface GaugeValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org_glowroot_wire_api_model.GaugeValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string gauge_name = 1;</code>
     */
    java.lang.String getGaugeName();
    /**
     * <code>optional string gauge_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getGaugeNameBytes();

    /**
     * <code>optional int64 capture_time = 2;</code>
     */
    long getCaptureTime();

    /**
     * <code>optional double value = 3;</code>
     */
    double getValue();
  }
  /**
   * Protobuf type {@code org_glowroot_wire_api_model.GaugeValue}
   */
  public  static final class GaugeValue extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org_glowroot_wire_api_model.GaugeValue)
      GaugeValueOrBuilder {
    // Use GaugeValue.newBuilder() to construct.
    private GaugeValue(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GaugeValue() {
      gaugeName_ = "";
      captureTime_ = 0L;
      value_ = 0D;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GaugeValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              gaugeName_ = s;
              break;
            }
            case 16: {

              captureTime_ = input.readInt64();
              break;
            }
            case 25: {

              value_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.glowroot.wire.api.model.GaugeValueOuterClass.internal_static_org_glowroot_wire_api_model_GaugeValue_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.glowroot.wire.api.model.GaugeValueOuterClass.internal_static_org_glowroot_wire_api_model_GaugeValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue.class, org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue.Builder.class);
    }

    public static final int GAUGE_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object gaugeName_;
    /**
     * <code>optional string gauge_name = 1;</code>
     */
    public java.lang.String getGaugeName() {
      java.lang.Object ref = gaugeName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        gaugeName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string gauge_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getGaugeNameBytes() {
      java.lang.Object ref = gaugeName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gaugeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CAPTURE_TIME_FIELD_NUMBER = 2;
    private long captureTime_;
    /**
     * <code>optional int64 capture_time = 2;</code>
     */
    public long getCaptureTime() {
      return captureTime_;
    }

    public static final int VALUE_FIELD_NUMBER = 3;
    private double value_;
    /**
     * <code>optional double value = 3;</code>
     */
    public double getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getGaugeNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, gaugeName_);
      }
      if (captureTime_ != 0L) {
        output.writeInt64(2, captureTime_);
      }
      if (value_ != 0D) {
        output.writeDouble(3, value_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getGaugeNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, gaugeName_);
      }
      if (captureTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, captureTime_);
      }
      if (value_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, value_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org_glowroot_wire_api_model.GaugeValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org_glowroot_wire_api_model.GaugeValue)
        org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.glowroot.wire.api.model.GaugeValueOuterClass.internal_static_org_glowroot_wire_api_model_GaugeValue_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.glowroot.wire.api.model.GaugeValueOuterClass.internal_static_org_glowroot_wire_api_model_GaugeValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue.class, org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue.Builder.class);
      }

      // Construct using org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        gaugeName_ = "";

        captureTime_ = 0L;

        value_ = 0D;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.glowroot.wire.api.model.GaugeValueOuterClass.internal_static_org_glowroot_wire_api_model_GaugeValue_descriptor;
      }

      public org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue getDefaultInstanceForType() {
        return org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue.getDefaultInstance();
      }

      public org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue build() {
        org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue buildPartial() {
        org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue result = new org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue(this);
        result.gaugeName_ = gaugeName_;
        result.captureTime_ = captureTime_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue) {
          return mergeFrom((org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue other) {
        if (other == org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue.getDefaultInstance()) return this;
        if (!other.getGaugeName().isEmpty()) {
          gaugeName_ = other.gaugeName_;
          onChanged();
        }
        if (other.getCaptureTime() != 0L) {
          setCaptureTime(other.getCaptureTime());
        }
        if (other.getValue() != 0D) {
          setValue(other.getValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object gaugeName_ = "";
      /**
       * <code>optional string gauge_name = 1;</code>
       */
      public java.lang.String getGaugeName() {
        java.lang.Object ref = gaugeName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          gaugeName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gauge_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getGaugeNameBytes() {
        java.lang.Object ref = gaugeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gaugeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gauge_name = 1;</code>
       */
      public Builder setGaugeName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        gaugeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gauge_name = 1;</code>
       */
      public Builder clearGaugeName() {
        
        gaugeName_ = getDefaultInstance().getGaugeName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gauge_name = 1;</code>
       */
      public Builder setGaugeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        gaugeName_ = value;
        onChanged();
        return this;
      }

      private long captureTime_ ;
      /**
       * <code>optional int64 capture_time = 2;</code>
       */
      public long getCaptureTime() {
        return captureTime_;
      }
      /**
       * <code>optional int64 capture_time = 2;</code>
       */
      public Builder setCaptureTime(long value) {
        
        captureTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 capture_time = 2;</code>
       */
      public Builder clearCaptureTime() {
        
        captureTime_ = 0L;
        onChanged();
        return this;
      }

      private double value_ ;
      /**
       * <code>optional double value = 3;</code>
       */
      public double getValue() {
        return value_;
      }
      /**
       * <code>optional double value = 3;</code>
       */
      public Builder setValue(double value) {
        
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double value = 3;</code>
       */
      public Builder clearValue() {
        
        value_ = 0D;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:org_glowroot_wire_api_model.GaugeValue)
    }

    // @@protoc_insertion_point(class_scope:org_glowroot_wire_api_model.GaugeValue)
    private static final org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue();
    }

    public static org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GaugeValue>
        PARSER = new com.google.protobuf.AbstractParser<GaugeValue>() {
      public GaugeValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new GaugeValue(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<GaugeValue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GaugeValue> getParserForType() {
      return PARSER;
    }

    public org.glowroot.wire.api.model.GaugeValueOuterClass.GaugeValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_glowroot_wire_api_model_GaugeValue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_glowroot_wire_api_model_GaugeValue_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020GaugeValue.proto\022\033org_glowroot_wire_ap" +
      "i_model\"E\n\nGaugeValue\022\022\n\ngauge_name\030\001 \001(" +
      "\t\022\024\n\014capture_time\030\002 \001(\003\022\r\n\005value\030\003 \001(\001B\035" +
      "\n\033org.glowroot.wire.api.modelb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_org_glowroot_wire_api_model_GaugeValue_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_glowroot_wire_api_model_GaugeValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_glowroot_wire_api_model_GaugeValue_descriptor,
        new java.lang.String[] { "GaugeName", "CaptureTime", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
