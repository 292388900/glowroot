/*
 * Copyright 2012-2013 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

body {
  padding: 32px 0px;
}

@font-face {
  font-family: 'SpecialElite-Regular';
  src: url('../lib/specialelite/specialelite.eot');
  src: url('../lib/specialelite/specialelite.eot?#iefix') format('embedded-opentype'),
       url('../lib/specialelite/specialelite.woff') format('woff'),
       url('../lib/specialelite/specialelite.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

.pin-vertical-scrollbar {
  /* always display vertical scrollbar so content doesn't shift horizontally when the vertical
     scrollbar shows up because the page dynamically expanded greater than a single screen, or
     contracted down to a single screen, e.g. when showing or hiding content */
  overflow-y: scroll;
}

.header {
  font-weight: normal;
  font-size: 36px;
  line-height: 40px;
  margin: 10px 0 24px 0;
  text-rendering: optimizelegibility;
}

.header-logo {
  font-family: 'SpecialElite-Regular';
  font-size: 38px;
  padding: 8px 20px 1px 20px;
  vertical-align: 1px;
  border-radius: 8px;
  color: #b12930;
  background-color: #eee;
}

.header-page-name {
  color: #555;
  padding-left: 14px;
}

.header-see-also {
  font-size: 20px;
}

.header-see-also .dropdown-toggle {
  background-color: #eee;
  border-radius: 6px;
  padding: 3px 28px 6px 28px;
  cursor: pointer;
}

.header-see-also .dropdown-toggle:hover,
.header-see-also .dropdown-toggle:focus {
  /* need to indicate focus for keyboard nav */
  background-color: #ddd;
}

.header-see-also .dropdown-menu {
  text-align: right;
  padding: 3px 6px;
}

.header-see-also li {
  padding: 2px 0;
}

.header-see-also:hover .dropdown-menu {
  display: block;
}

.header-see-also .dropdown-menu li > a:hover,
.header-see-also .dropdown-menu li > a:focus {
  color: #333;
  background-color: #eee;
  background-image: none;
  border-radius: 6px;
}

.header-see-also .dropdown-menu li > a:active {
  background-color: #f6f6f6;
}

.header-see-also .dropdown-menu li > a {
  padding: 7px 24px;
}

.header-see-also .dropdown-menu {
  background-color: #ddd;
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
  border: none;
}

input:focus {
  /* override bootstrap-datepicker styling with slightly darker blue focus border
     !important is needed because bootstrap lists each input type separately
     TODO override bootstrap colors by compiling bootstrap css with LESS */
  /* note: this same color is used (in hex form #4286BD) for datepicker styling in home.css */
  border-color: rgba(66, 134, 189, 0.8) !important;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(66, 134, 189, 0.6) !important;
}

.control-group.error input:focus {
  /* need to force border on error to bootstrap default (without this, default red is overridden by
     darker blue color in above selector)
     TODO override bootstrap colors by compiling bootstrap css with LESS */
  border-color: #953B39 !important;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #D59392 !important;
}

.button-success-message {
  display: inline-block;
  color: green;
  font-size: 16px;
  margin-left: 10px;
  vertical-align: middle;
}

.button-spinner {
  display: inline-block;
  margin-left: 30px;
  vertical-align: middle;
}

a {
  text-decoration: none;
  color: #b12930;
}

a:hover,
a:focus {
  text-decoration: none;
  color: #b12930;
  background-color: #ddd;
}

a:active {
  background-color: #ccc;
}

.realbtn {
  /* upside to real button: mouse click does not focus on button, can use :active to provide
                            feedback on clicking already focused button
     downside to real button: button text is not selectable */
  display: inline-block;
  cursor: pointer;
  padding: 2px 4px;
  border-radius: 4px;
  /* remove border, background-color and other default browser button styling
     so this class can be applied to <button> */
  border: none;
  background-color: transparent;
  text-align: left;
  vertical-align: bottom;
}

.realbtn:hover,
.realbtn:focus {
  background-color: #ddd;
}

.realbtn:active {
  background-color: #ccc;
}

.red {
  color: #b12930;
}

.nowrap {
  white-space: nowrap;
}

.accordion-heading {
  background-color: #eee;
}

.accordion-heading-button {
  width: 100%;
  padding: 12px 1em;
  font-size: 19px;
}

.accordion-heading-button.realbtn {
  border-radius: 0;
}

.accordion-group {
  margin-bottom: 6px;
}

.accordion-body {
  background-color: #f8f8f8;
}

.accordion-inner {
  padding: 0px;
}

.accordion-form-padding {
  /* the bottom of the form already has extra padding from margin-bottom on control-group */
  padding: 30px 24px 16px 24px;
}

.form-horizontal .form-actions {
  /* make button line up under form controls */
  padding-left: 200px;
}

.accordion-inner.form-horizontal {
  margin: 0;
}

.accordion-body .form-actions {
  margin-top: 0;
  margin-bottom: 0;
  background-color: #f8f8f8;
}

.hide {
  display: none !important;
}

.offscreen {
  position: absolute;
  left: -999em;
}
