syntax = "proto3";

package org_glowroot_agent_it_harness;

option java_package = "org.glowroot.agent.it.harness.model";

message TransactionConfigUpdate {
  OptionalInt profiling_interval_millis = 1;
  OptionalInt slow_threshold_millis = 2;
}

message UserRecordingConfigUpdate {
  OptionalStringList users = 1;
  OptionalInt profiling_interval_millis = 2;
}

// only includes advanced config properties currently used by tests
message AdvancedConfigUpdate {
  OptionalBool timer_wrapper_methods = 1;
  OptionalInt immediate_partial_store_threshold_seconds = 2;
  OptionalInt max_trace_entries_per_transaction = 3;
  OptionalBool capture_thread_info = 4;
  OptionalBool capture_gc_activity = 5;
}

message PluginConfigUpdate {
  string id = 1;
  OptionalBool enabled = 2;
  repeated PluginProperty property = 3;
}

message InstrumentationConfig {
  string class_name = 1;
  string declaring_class_name = 2;
  string method_name = 3;
  repeated string method_parameter_type = 4;
  string method_return_type = 5;
  repeated MethodModifier method_modifier = 6;
  CaptureKind capture_kind = 7;
  string timer_name = 8;
  string trace_entry_message_template = 9;
  OptionalInt trace_entry_stack_threshold_millis = 10; // absent means N/A
  bool trace_entry_capture_self_nested = 11;
  string transaction_type = 12;
  string transaction_name_template = 13;
  string transaction_user_template = 14;
  map<string, string> transaction_attribute_templates = 15;
  OptionalInt transaction_slow_threshold_millis = 16; // absent means N/A
  string enabled_property = 17;
  string trace_entry_enabled_property = 18;
}

message OptionalInt {
  int32 value = 1;
}

message OptionalBool {
  bool value = 1;
}

message OptionalStringList {
  repeated string value = 1;
}

message PluginProperty {
  string name = 1;
  oneof val {
    bool bval = 2;
    OptionalDouble dval = 3;
    string sval = 4;
  }
}

// can't use simple one field OptionalDouble since that won't work inside "oneof"
message OptionalDouble {
  bool absent = 1;
  double value = 2;
}

enum MethodModifier {
  PUBLIC = 0;
  STATIC = 4;
  NOT_STATIC = 5;
}

enum CaptureKind {
  TRANSACTION = 0;
  TRACE_ENTRY = 1;
  TIMER = 2;
  OTHER = 3;
}
