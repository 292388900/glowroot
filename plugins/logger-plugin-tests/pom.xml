<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.glowroot</groupId>
    <artifactId>glowroot-parent</artifactId>
    <version>0.5-SNAPSHOT</version>
    <relativePath>../..</relativePath>
  </parent>

  <groupId>org.glowroot.plugins</groupId>
  <artifactId>logger-plugin-tests</artifactId>

  <!--
    a separate project is needed for tests in order to run the tests against shaded logger-plugin
    this is important since logger-plugin shades the same classes its weaving (org.slf4j.helpers),
    and so need to make sure that it weaves the unshaded classes even when it is shaded itself -->
  <name>Glowroot Logger Plugin Tests</name>
  <description>Glowroot Logger Plugin Tests</description>

  <dependencies>
    <!--
      glowroot-core test dependency needs to come before glowroot-plugin-api because:

      even though glowroot-plugin-api is marked with scope provided, it is still included when
      running tests, but it is unshaded and includes references to unshaded slf4j classes

      this is normally not a problem, except in the tests which weave the slf4j logger, because some
      glowroot-plugin-api classes are loaded in PreInitializeClasses which causes unshaded slf4j
      classes to be loaded before the WeavingClassFileTransformer is registered, which prevents the
      Slf4jAspect from weaving them
    -->
    <dependency>
      <groupId>org.glowroot</groupId>
      <artifactId>glowroot-core</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glowroot</groupId>
      <artifactId>glowroot-plugin-api</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glowroot</groupId>
      <artifactId>glowroot-test-harness</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.glowroot.plugins</groupId>
      <artifactId>logger-plugin</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- TODO test with slf4j over log4j, to test non-nesting of advice since capturing both slf4j
      and log4j, currently logback is required, see TODO in test-harness/pom.xml -->
    <!--dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.6</version>
      <scope>test</scope>
      </dependency -->
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <properties>
            <property>
              <!-- this is just a test performance optimization -->
              <name>listener</name>
              <value>org.glowroot.container.SharedContainerRunListener</value>
            </property>
          </properties>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
