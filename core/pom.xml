<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.glowroot</groupId>
    <artifactId>glowroot-parent</artifactId>
    <version>0.5-SNAPSHOT</version>
  </parent>

  <artifactId>glowroot-core</artifactId>

  <name>Glowroot Core</name>
  <description>Glowroot Core</description>

  <properties>
    <!-- default it to empty, otherwise it will default to the text "${git.commit.hash}" -->
    <git.commit.hash></git.commit.hash>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss Z</maven.build.timestamp.format>
    <!-- this extra property is needed since maven.build.timestamp is not directly available to
      resource filtering, see http://jira.codehaus.org/browse/MRESOURCES-99 -->
    <maven.build.timestamp.value>${maven.build.timestamp}</maven.build.timestamp.value>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.glowroot</groupId>
      <artifactId>glowroot-plugin-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <version>4.2</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-commons</artifactId>
      <version>4.2</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-tree</artifactId>
      <version>4.2</version>
    </dependency>
    <dependency>
      <!-- org.objectweb.asm.util.CheckClassAdapter.verify() is used when woven byte code
        verification is enabled via -Dglowroot.weaving.verify=true -->
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-util</artifactId>
      <version>4.2</version>
    </dependency>
    <dependency>
      <!-- this is an optional dependency of asm-util -->
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-analysis</artifactId>
      <version>4.2</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty</artifactId>
      <!-- netty 4.x requires jdk 6 -->
      <version>3.8.0.Final</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.5</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava-jdk5</artifactId>
      <version>14.0.1</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <!-- jackson 2.2 requires jdk 6 -->
      <version>2.1.5</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <!-- jackson 2.2 requires jdk 6 -->
      <version>2.1.5</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <!-- jackson 2.2 requires jdk 6 -->
      <version>2.1.5</version>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <!-- 1.3.168 is the last version of h2 that supports jdk 5
        but that version introduced a change where using h2's native api triggers java.sql.Driver
        to load, which finds and loads other drivers via META-INF/services/java.sql.Driver
        the problem is that this all happens during Glowroot initialization before it is ready
        for plugins (e.g. jdbc-plugin) -->
      <version>1.3.167</version>
    </dependency>
    <dependency>
      <groupId>com.ning</groupId>
      <artifactId>compress-lzf</artifactId>
      <!-- 0.9.6 is the last version of compress-lzf that supports jdk 5 -->
      <version>0.9.6</version>
    </dependency>
    <dependency>
      <groupId>org.glowroot.shaded</groupId>
      <artifactId>shaded-slf4j-impl</artifactId>
      <version>1.0.13-SNAPSHOT</version>
    </dependency>
    <dependency>
      <!-- only annotations are used, so ok the (unshaded) artifact is not provided at runtime -->
      <groupId>edu.washington.cs.types.checker</groupId>
      <artifactId>checker-quals-jdk5</artifactId>
      <version>1.7.1</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-assert-core</artifactId>
      <!-- 2.0M7 is the last version of fest-assert-core that supports jdk 5 -->
      <version>2.0M7</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- this is included to test weaving against jdk 1.3 bytecode -->
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <!-- this is the latest version compiled to jdk 1.3 bytecode -->
      <version>2.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- this is included to test weaving against JSR bytecode that ends up being inlined via
        JSRInlinerAdapter -->
      <groupId>org.apache.jackrabbit</groupId>
      <artifactId>jackrabbit-core</artifactId>
      <!-- this is the latest version compiled to jdk 5 and therefore the latest version to include
        JSR bytecode since JSR bytecode was deprecated in jdk 6 -->
      <version>2.5.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.0.13</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.caliper</groupId>
      <artifactId>caliper</artifactId>
      <version>1.0-beta-1</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <!-- exclude guava artifact so no conflict with differently named guava-jdk5 artifact -->
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!-- this is a transitive dependency of caliper, but caliper currently depends on version 2.0
        of this library which has dependencies on asm 3.1 artifacts which have different a groupId
        from the asm 4.1 artifacts already used by glowroot, so need to pin the latest version
        (2.1) which depends on asm 4.0 which has the same groupId as asm 4.1 and therefore does not
        conflict -->
      <groupId>com.google.code.java-allocation-instrumenter</groupId>
      <artifactId>java-allocation-instrumenter</artifactId>
      <version>2.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <pluginRepositories>
    <pluginRepository>
      <!-- this is needed temporarily until com.github.trask:exec-maven-plugin:1.2.1+patch.1
           makes it into maven central -->
      <id>sonatype-nexus-snapshots</id>
      <name>Sonatype Nexus Snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <build>
    <resources>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <excludes>
          <exclude>META-INF/MANIFEST.MF</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>META-INF/MANIFEST.MF</include>
        </includes>
      </resource>
      <resource>
        <directory>${project.build.directory}/ui-resources-dist</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <!--
          com.github.trask:exec-maven-plugin:1.2.1+patch.1 includes two patches on top of
          org.codehaus.mojo:exec-maven-plugin:1.2.1
          * http://jira.codehaus.org/browse/MEXEC-118
          * http://jira.codehaus.org/browse/MEXEC-121
        -->
        <groupId>com.github.trask</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1+patch.1-SNAPSHOT</version>
        <executions>
          <execution>
            <id>npm-install</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <!-- npm install is not needed when grunt is skipped -->
              <skip>${grunt.skip}</skip>
              <executable>npm</executable>
              <arguments>
                <argument>install</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <!-- using 'bower update' instead of 'bower install' due to
              https://github.com/bower/bower/issues/939 -->
            <id>bower-update</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <!-- bower update is not needed when grunt is skipped -->
              <skip>${grunt.skip}</skip>
              <executable>bower</executable>
              <arguments>
                <argument>update</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>grunt-build</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${grunt.skip}</skip>
              <executable>grunt</executable>
              <arguments>
                <argument>--no-color</argument>
                <argument>build</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <testExcludes>
            <testExclude>org/glowroot/trace/ThreadSafeCollectionOfTenBenchmark.java</testExclude>
          </testExcludes>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <!-- eclipse m2e-wtp doesn't like maven-jar-plugin 2.4 when using manifestFile, so staying
          with 2.3.2 for now, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=406507 -->
        <version>2.3.2</version>
        <configuration>
          <archive>
            <!-- using build output directory to get the post-filtered MANIFEST.MF -->
            <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
          </archive>
          <excludes>
            <exclude>org/glowroot/local/ui/app/**</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <id>add-third-party</id>
            <goals>
              <goal>add-third-party</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <thirdPartyFilename>META-INF/THIRD-PARTY-JAVA-LIBRARIES.txt</thirdPartyFilename>
          <useMissingFile>true</useMissingFile>
          <excludedArtifacts>glowroot-plugin-api</excludedArtifacts>
          <excludedScopes>test,provided</excludedScopes>
          <licenseMerges>
            <licenseMerge>
              Apache License, Version 2.0
              |The Apache Software License, Version 2.0
              |Apache License 2.0
            </licenseMerge>
            <licenseMerge>
              BSD License
              |BSD
            </licenseMerge>
          </licenseMerges>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- this profile is active by default, and disabled only when running jacoco code coverage
        reports, see jacoco profile comment in parent pom.xml for more detail -->
      <id>shade-and-proguard</id>
      <activation>
        <property>
          <name>!jacoco</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-shade-plugin</artifactId>
            <version>2.1</version>
            <configuration>
              <dependencyReducedPomLocation>
                ${project.build.directory}/dependency-reduced-pom.xml
              </dependencyReducedPomLocation>
              <createSourcesJar>true</createSourcesJar>
            </configuration>
            <executions>
              <execution>
                <id>default</id>
                <goals>
                  <goal>shade</goal>
                </goals>
                <configuration>
                  <shadeSourcesContent>true</shadeSourcesContent>
                  <filters>
                    <filter>
                      <artifact>com.h2database:h2</artifact>
                      <excludes>
                        <exclude>META-INF/**</exclude>
                      </excludes>
                    </filter>
                    <filter>
                      <artifact>io.netty:netty</artifact>
                      <excludes>
                        <exclude>META-INF/jboss-beans.xml</exclude>
                        <exclude>META-INF/LICENSE.txt</exclude>
                        <exclude>META-INF/NOTICE.txt</exclude>
                        <exclude>META-INF/license/**</exclude>
                      </excludes>
                    </filter>
                    <filter>
                      <artifact>com.fasterxml.jackson.core:jackson-core</artifact>
                      <excludes>
                        <exclude>META-INF/services/com.fasterxml.jackson.core.JsonFactory</exclude>
                      </excludes>
                    </filter>
                    <filter>
                      <artifact>com.fasterxml.jackson.core:jackson-databind</artifact>
                      <excludes>
                        <exclude>META-INF/services/com.fasterxml.jackson.core.ObjectCodec</exclude>
                      </excludes>
                    </filter>
                    <filter>
                      <!-- this is not excluded via artifactSet so that it will still be removed
                        from the dependency reduced pom, the classes will be added (without shading)
                        below in a second maven-shade-plugin execution -->
                      <artifact>org.glowroot.shaded:shaded-slf4j-impl</artifact>
                      <excludes>
                        <exclude>**</exclude>
                      </excludes>
                    </filter>
                  </filters>
                  <relocations>
                    <relocation>
                      <pattern>org.objectweb.asm</pattern>
                      <shadedPattern>org.glowroot.shaded.objectweb.asm</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>org.h2</pattern>
                      <shadedPattern>org.glowroot.shaded.h2</shadedPattern>
                    </relocation>
                    <relocation>
                      <!-- shade thread names to make it easy to identify glowroot threads -->
                      <rawString>true</rawString>
                      <pattern>H2 File Lock Watchdog</pattern>
                      <shadedPattern>Glowroot-H2 File Lock Watchdog</shadedPattern>
                    </relocation>
                    <relocation>
                      <!-- shade thread names to make it easy to identify glowroot threads -->
                      <rawString>true</rawString>
                      <pattern>H2 Log Writer</pattern>
                      <shadedPattern>Glowroot-H2 Log Writer</shadedPattern>
                    </relocation>
                    <relocation>
                      <!-- shade thread names to make it easy to identify glowroot threads -->
                      <rawString>true</rawString>
                      <pattern>Generate Seed</pattern>
                      <shadedPattern>Glowroot-H2 Generate Seed</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>com.ning.compress</pattern>
                      <shadedPattern>org.glowroot.shaded.ning.compress</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>com.google.common</pattern>
                      <shadedPattern>org.glowroot.shaded.google.common</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>com.fasterxml.jackson</pattern>
                      <shadedPattern>org.glowroot.shaded.fasterxml.jackson</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>org.jboss.netty</pattern>
                      <shadedPattern>org.glowroot.shaded.jboss.netty</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>org.slf4j</pattern>
                      <shadedPattern>org.glowroot.shaded.slf4j</shadedPattern>
                    </relocation>
                    <relocation>
                      <pattern>com.github.mustachejava</pattern>
                      <shadedPattern>org.glowroot.shaded.github.mustachejava</shadedPattern>
                    </relocation>
                  </relocations>
                </configuration>
              </execution>
              <execution>
                <!-- shaded-slf4j-impl can't be included above since its (intentionally) unshaded
                  slf4j references would then get shaded -->
                <id>shade-with-logback</id>
                <goals>
                  <goal>shade</goal>
                </goals>
                <configuration>
                  <createDependencyReducedPom>false</createDependencyReducedPom>
                  <artifactSet>
                    <includes>
                      <include>org.glowroot:glowroot</include>
                      <include>org.glowroot.shaded:shaded-slf4j-impl</include>
                    </includes>
                  </artifactSet>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.github.wvengen</groupId>
            <artifactId>proguard-maven-plugin</artifactId>
            <version>2.0.6</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>proguard</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <includeDependency>false</includeDependency>
              <obfuscate>false</obfuscate>
              <libs>
                <!-- this path is overridden on osx, see the mac profile below -->
                <lib>${java.home}/lib/rt.jar</lib>
              </libs>
              <options>
                <option>-dontoptimize</option>
                <option>-dontnote **</option>
                <option>-dontwarn **</option>
                <option>-keep class org.glowroot.* { *; }</option>
                <option>-keep class org.glowroot.api.** { *; }</option>
                <option>-keep class org.glowroot.collector.** { *; }</option>
                <option>-keep class org.glowroot.common.** { *; }</option>
                <option>-keep class org.glowroot.config.** { *; }</option>
                <option>-keep class org.glowroot.dynamicadvice.** { *; }</option>
                <option>-keep class org.glowroot.local.** { *; }</option>
                <!-- keep marker annotations so they can be used to doc tests also -->
                <option>-keep class org.glowroot.markers.** { *; }</option>
                <option>-keep class org.glowroot.trace.** { *; }</option>
                <option>-keep class org.glowroot.weaving.** { *; }</option>
                <!-- keep all guava classes so that plugins can use shaded-guava artifact -->
                <option>-keep class org.glowroot.shaded.google.common.** { *; }</option>
                <!-- keep all slf4j classes so that plugins can use shaded-slf4j-api artifact -->
                <option>-keep class org.glowroot.shaded.org.slf4j.** { *; }</option>
                <!-- keep DefaultMustacheFactory.compile() which is used by generated advice -->
                <option>
                  -keep class org.glowroot.shaded.github.mustachejava.DefaultMustacheFactory
                  {
                  public org.glowroot.shaded.github.mustachejava.Mustache
                  compile(java.io.Reader,
                  java.lang.String); }
                </option>
                <!-- keep all logback appenders -->
                <option>
                  -keep class * extends org.glowroot.shaded.qos.logback.core.Appender { *; }
                </option>
                <!-- keep special enumeration methods (see "Processing enumeration classes" section
                  at http://proguard.sourceforge.net/manual/examples.html) -->
                <option>
                  -keepclassmembers enum *
                  { public static **[] values();
                  public static **
                  valueOf(java.lang.String); }
                </option>
                <!-- if the FilterAttachable<E> interface is not kept, then the interface is
                  stripped from org.glowroot.shaded.qos.logback.core.Appender<E>, and proguard
                  then strips the generic parameter type from Appender, but proguard
                  (at least as of version 4.10) leaves behind the generic parameter on the
                  doAppend(E paramE) method, which leads to a MalformedParameterizedTypeException
                  on JDK 7 (maybe due to more strict validation in JDK 7) -->
                <option>
                  -keep class org.glowroot.shaded.qos.logback.core.spi.FilterAttachable { *; }
                </option>
              </options>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>net.sf.proguard</groupId>
                <artifactId>proguard-base</artifactId>
                <version>4.10</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>mac</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.wvengen</groupId>
            <artifactId>proguard-maven-plugin</artifactId>
            <configuration>
              <libs>
                <lib>${java.home}/../Classes/classes.jar</lib>
              </libs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
