<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.informant</groupId>
    <artifactId>informant-parent</artifactId>
    <version>0.5-SNAPSHOT</version>
  </parent>

  <artifactId>informant-core</artifactId>

  <name>Informant Core</name>
  <description>Informant Core</description>

  <dependencies>
    <dependency>
      <groupId>io.informant</groupId>
      <artifactId>informant-plugin-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <version>4.1</version>
    </dependency>
    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-commons</artifactId>
      <version>4.1</version>
    </dependency>
    <dependency>
      <!-- org.objectweb.asm.util.CheckClassAdapter.verify() is used when woven byte code
        verification is enabled via -Dinformant.weaving.verify=true -->
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-util</artifactId>
      <version>4.1</version>
    </dependency>
    <dependency>
      <!-- this is an optional dependency of asm-util -->
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-analysis</artifactId>
      <version>4.1</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty</artifactId>
      <!-- netty 4.x requires jdk 6 -->
      <version>3.6.2.Final</version>
    </dependency>
    <dependency>
      <groupId>io.informant.shaded</groupId>
      <artifactId>shaded-slf4j-api</artifactId>
      <version>1.7.2-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>io.informant</groupId>
      <artifactId>informant-shaded-slf4j-impl</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava-jdk5</artifactId>
      <version>13.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.2.2</version>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <!-- this is the last version of h2 that supports jdk 5 -->
      <version>1.3.168</version>
    </dependency>
    <dependency>
      <groupId>com.ning</groupId>
      <artifactId>compress-lzf</artifactId>
      <version>0.9.6</version>
    </dependency>
    <dependency>
      <!-- using sisu-guice for now until guice upgrades to guava 10.0
        primarily due to http://code.google.com/p/google-guice/issues/detail?id=288 -->
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-guice</artifactId>
      <version>3.1.2</version>
      <exclusions>
        <exclusion>
          <!-- exclude guava artifact so no conflict with differently named guava-jdk5 artifact -->
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <!-- using sisu-guice for now until guice upgrades to guava 10.0 -->
      <groupId>org.sonatype.sisu.inject</groupId>
      <artifactId>guice-assistedinject</artifactId>
      <version>3.1.2</version>
    </dependency>
    <dependency>
      <groupId>edu.washington.cs.types.checker</groupId>
      <artifactId>checker-quals-jdk5</artifactId>
      <version>1.6.0</version>
    </dependency>
    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-reflect</artifactId>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-util</artifactId>
      <!-- can't upgrade to 1.2.3 until after next fest-assert release, see
        https://github.com/alexruiz/fest-util/commit/f2f13ce67b4b872ceaccc19faa435c39023d3cec
        and now, waiting for bug fix in new fest-assert, see
        https://groups.google.com/forum/?fromgroups=#!topic/easytesting/wgf3ahj21o4 -->
      <version>1.2.2</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-assert-core</artifactId>
      <version>2.0M7</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <!-- this is included to test weaving against jdk 1.3 bytecode -->
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <mainClass>io.informant.core.Viewer</mainClass>
            </manifest>
            <manifestEntries>
              <Premain-Class>io.informant.core.MainEntryPoint</Premain-Class>
              <Can-Redefine-Classes>true</Can-Redefine-Classes>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.0</version>
        <executions>
          <execution>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <dependencyReducedPomLocation>
            ${project.build.directory}/dependency-reduced-pom.xml
          </dependencyReducedPomLocation>
          <createSourcesJar>true</createSourcesJar>
          <filters>
            <filter>
              <artifact>org.sonatype.sisu:sisu-guice</artifact>
              <excludes>
                <exclude>META-INF/DEPENDENCIES</exclude>
                <exclude>META-INF/LICENSE</exclude>
                <exclude>META-INF/NOTICE</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>org.sonatype.sisu.inject:guice-assistedinject</artifact>
              <excludes>
                <exclude>META-INF/DEPENDENCIES</exclude>
                <exclude>META-INF/LICENSE</exclude>
                <exclude>META-INF/NOTICE</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>com.h2database:h2</artifact>
              <excludes>
                <exclude>META-INF/**</exclude>
              </excludes>
            </filter>
            <filter>
              <artifact>io.netty:netty</artifact>
              <excludes>
                <exclude>META-INF/jboss-beans.xml</exclude>
                <exclude>META-INF/LICENSE.txt</exclude>
                <exclude>META-INF/NOTICE.txt</exclude>
                <exclude>META-INF/license/**</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <!-- this profile is active by default, and disabled only when running jacoco code coverage
        reports, see jacoco profile comment in parent pom.xml for more detail -->
      <id>shade-and-proguard</id>
      <activation>
        <property>
          <name>!jacoco</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-shade-plugin</artifactId>
            <configuration>
              <shadeSourcesContent>true</shadeSourcesContent>
              <relocations>
                <relocation>
                  <pattern>org.objectweb.asm</pattern>
                  <shadedPattern>io.informant.shaded.objectweb.asm</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.h2</pattern>
                  <shadedPattern>io.informant.shaded.h2</shadedPattern>
                </relocation>
                <relocation>
                  <!-- shade thread names as well to make it easy to identify informant threads -->
                  <rawString>true</rawString>
                  <pattern>H2 File Lock Watchdog</pattern>
                  <shadedPattern>Informant-H2 File Lock Watchdog</shadedPattern>
                </relocation>
                <relocation>
                  <!-- shade thread names as well to make it easy to identify informant threads -->
                  <rawString>true</rawString>
                  <pattern>H2 Log Writer</pattern>
                  <shadedPattern>Informant-H2 Log Writer</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.ning.compress</pattern>
                  <shadedPattern>io.informant.shaded.ning.compress</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.ning.http</pattern>
                  <shadedPattern>io.informant.shaded.ning.http</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.google.common</pattern>
                  <shadedPattern>io.informant.shaded.google.common</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>javax.annotation</pattern>
                  <shadedPattern>io.informant.shaded.javax.annotation</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>checkers</pattern>
                  <shadedPattern>io.informant.shaded.checkers</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.google.gson</pattern>
                  <shadedPattern>io.informant.shaded.google.gson</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.jboss.netty</pattern>
                  <shadedPattern>io.informant.shaded.jboss.netty</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.google.inject</pattern>
                  <shadedPattern>io.informant.shaded.google.inject</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>javax.inject</pattern>
                  <shadedPattern>io.informant.shaded.javax.inject</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.aopalliance</pattern>
                  <shadedPattern>io.informant.shaded.aopalliance</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.fest</pattern>
                  <shadedPattern>io.informant.shaded.fest</shadedPattern>
                </relocation>
              </relocations>
            </configuration>
          </plugin>
          <plugin>
            <groupId>com.github.wvengen</groupId>
            <artifactId>proguard-maven-plugin</artifactId>
            <version>2.0.6</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>proguard</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <includeDependency>false</includeDependency>
              <obfuscate>false</obfuscate>
              <libs>
                <!-- this path is overridden on osx, see the mac profile below -->
                <lib>${java.home}/lib/rt.jar</lib>
              </libs>
              <options>
                <option>-dontoptimize</option>
                <option>-dontnote **</option>
                <option>-dontwarn **</option>
                <option>-keep class io.informant.core.MainEntryPoint { *; }</option>
                <option>-keep class io.informant.core.InformantModule { *; }</option>
                <option>
                  -keepclassmembers class * { @io.informant.shaded.google.inject.Inject *; }
                </option>
                <option>-keep class io.informant.local.**JsonService { *; }</option>
                <option>-keep class io.informant.api.** { *; }</option>
                <option>-keep class io.informant.core.** { *; }</option>
                <!-- test classes use DaemonExecutors -->
                <option>-keep class io.informant.core.util.DaemonExecutors { *; }</option>
                <option>-keep class io.informant.core.util.Files { *; }</option>
                <option>-keep class io.informant.core.util.Threads { *; }</option>
                <option>
                  -keep class io.informant.core.weaving.IsolatedWeavingClassLoader { *; }
                </option>
                <!-- keep all guava classes so that plugins can use shaded-guava artifact -->
                <option>-keep class io.informant.shaded.google.common.** { *; }</option>
                <!-- keep all logback appenders -->
                <option>
                  -keep class * extends io.informant.shaded.qos.logback.core.Appender { *; }
                </option>
                <option>
                  -keep class
                  io.informant.shaded.ning.http.client.providers.netty.NettyAsyncHttpProvider { *; }
                </option>
                <!-- keep special enumeration methods (see "Processing enumeration classes" section
                  at http://proguard.sourceforge.net/manual/examples.html) -->
                <option>
                  -keepclassmembers enum *
                  { public static **[] values(); public static ** valueOf(java.lang.String); }
                </option>
              </options>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>net.sf.proguard</groupId>
                <artifactId>proguard-base</artifactId>
                <version>4.8</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <version>1.2</version>
            <executions>
              <execution>
                <id>add-third-party</id>
                <goals>
                  <goal>add-third-party</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <thirdPartyFilename>META-INF/THIRD-PARTY.txt</thirdPartyFilename>
              <useMissingFile>true</useMissingFile>
              <excludedGroups>io.informant</excludedGroups>
              <excludedScopes>test,provided</excludedScopes>
              <licenseMerges>
                <licenseMerge>
                  The Apache Software License, Version 2.0
                  |Apache License, Version 2.0
                  |Apache License 2.0
                </licenseMerge>
              </licenseMerges>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>mac</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.wvengen</groupId>
            <artifactId>proguard-maven-plugin</artifactId>
            <configuration>
              <libs>
                <lib>${java.home}/../Classes/classes.jar</lib>
              </libs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
